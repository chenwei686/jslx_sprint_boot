<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.isprint.jslx.lccfd.dao.InputMapper" >
  <resultMap id="BaseResultMap" type="com.isprint.jslx.lccfd.model.Input" >
    <id column="Id" property="id" jdbcType="VARCHAR" />
    <result column="TmId" property="tmid" jdbcType="VARCHAR" />
    <result column="InputCode" property="inputcode" jdbcType="VARCHAR" />
    <result column="BaseType" property="basetype" jdbcType="VARCHAR" />
    <result column="InputType" property="inputtype" jdbcType="VARCHAR" />
    <result column="Score" property="score" jdbcType="DECIMAL" />
    <result column="Order" property="order" jdbcType="INTEGER" />
    <result column="InputScore" property="inputscore" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.isprint.jslx.lccfd.model.Input" extends="BaseResultMap" >
    <result column="InputAnswer" property="inputanswer" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      Id, TmId, InputCode, BaseType, InputType, Score, Order, InputScore
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <sql id="Blob_Column_List" >
    InputAnswer
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.isprint.jslx.lccfd.model.InputQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from input
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.isprint.jslx.lccfd.model.InputQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from input
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    Id,TmId,InputCode,BaseType,InputType,Score,Order,InputScore,InputAnswer
    ,
    <include refid="Blob_Column_List" />
    from input
    where Id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from input
    where Id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.isprint.jslx.lccfd.model.InputQuery" >
    delete from input
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.isprint.jslx.lccfd.model.Input" >
    insert into input (Id, TmId, InputCode, 
      BaseType, InputType, Score, 
      Order, InputScore, InputAnswer
      )
    values (#{id,jdbcType=VARCHAR}, #{tmid,jdbcType=VARCHAR}, #{inputcode,jdbcType=VARCHAR}, 
      #{basetype,jdbcType=VARCHAR}, #{inputtype,jdbcType=VARCHAR}, #{score,jdbcType=DECIMAL}, 
      #{order,jdbcType=INTEGER}, #{inputscore,jdbcType=VARCHAR}, #{inputanswer,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.isprint.jslx.lccfd.model.Input" >
    insert into input
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="tmid != null" >
        TmId,
      </if>
      <if test="inputcode != null" >
        InputCode,
      </if>
      <if test="basetype != null" >
        BaseType,
      </if>
      <if test="inputtype != null" >
        InputType,
      </if>
      <if test="score != null" >
        Score,
      </if>
      <if test="order != null" >
        Order,
      </if>
      <if test="inputscore != null" >
        InputScore,
      </if>
      <if test="inputanswer != null" >
        InputAnswer,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="tmid != null" >
        #{tmid,jdbcType=VARCHAR},
      </if>
      <if test="inputcode != null" >
        #{inputcode,jdbcType=VARCHAR},
      </if>
      <if test="basetype != null" >
        #{basetype,jdbcType=VARCHAR},
      </if>
      <if test="inputtype != null" >
        #{inputtype,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=DECIMAL},
      </if>
      <if test="order != null" >
        #{order,jdbcType=INTEGER},
      </if>
      <if test="inputscore != null" >
        #{inputscore,jdbcType=VARCHAR},
      </if>
      <if test="inputanswer != null" >
        #{inputanswer,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.isprint.jslx.lccfd.model.InputQuery" resultType="java.lang.Integer" >
    select count(*) from input
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update input
    <set >
      <if test="record.id != null" >
        Id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.tmid != null" >
        TmId = #{record.tmid,jdbcType=VARCHAR},
      </if>
      <if test="record.inputcode != null" >
        InputCode = #{record.inputcode,jdbcType=VARCHAR},
      </if>
      <if test="record.basetype != null" >
        BaseType = #{record.basetype,jdbcType=VARCHAR},
      </if>
      <if test="record.inputtype != null" >
        InputType = #{record.inputtype,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null" >
        Score = #{record.score,jdbcType=DECIMAL},
      </if>
      <if test="record.order != null" >
        Order = #{record.order,jdbcType=INTEGER},
      </if>
      <if test="record.inputscore != null" >
        InputScore = #{record.inputscore,jdbcType=VARCHAR},
      </if>
      <if test="record.inputanswer != null" >
        InputAnswer = #{record.inputanswer,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update input
    set Id = #{record.id,jdbcType=VARCHAR},
      TmId = #{record.tmid,jdbcType=VARCHAR},
      InputCode = #{record.inputcode,jdbcType=VARCHAR},
      BaseType = #{record.basetype,jdbcType=VARCHAR},
      InputType = #{record.inputtype,jdbcType=VARCHAR},
      Score = #{record.score,jdbcType=DECIMAL},
      Order = #{record.order,jdbcType=INTEGER},
      InputScore = #{record.inputscore,jdbcType=VARCHAR},
      InputAnswer = #{record.inputanswer,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update input
    set Id = #{record.id,jdbcType=VARCHAR},
      TmId = #{record.tmid,jdbcType=VARCHAR},
      InputCode = #{record.inputcode,jdbcType=VARCHAR},
      BaseType = #{record.basetype,jdbcType=VARCHAR},
      InputType = #{record.inputtype,jdbcType=VARCHAR},
      Score = #{record.score,jdbcType=DECIMAL},
      Order = #{record.order,jdbcType=INTEGER},
      InputScore = #{record.inputscore,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.isprint.jslx.lccfd.model.Input" >
    update input
    <set >
      <if test="tmid != null" >
        TmId = #{tmid,jdbcType=VARCHAR},
      </if>
      <if test="inputcode != null" >
        InputCode = #{inputcode,jdbcType=VARCHAR},
      </if>
      <if test="basetype != null" >
        BaseType = #{basetype,jdbcType=VARCHAR},
      </if>
      <if test="inputtype != null" >
        InputType = #{inputtype,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        Score = #{score,jdbcType=DECIMAL},
      </if>
      <if test="order != null" >
        Order = #{order,jdbcType=INTEGER},
      </if>
      <if test="inputscore != null" >
        InputScore = #{inputscore,jdbcType=VARCHAR},
      </if>
      <if test="inputanswer != null" >
        InputAnswer = #{inputanswer,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.isprint.jslx.lccfd.model.Input" >
    update input
    set TmId = #{tmid,jdbcType=VARCHAR},
      InputCode = #{inputcode,jdbcType=VARCHAR},
      BaseType = #{basetype,jdbcType=VARCHAR},
      InputType = #{inputtype,jdbcType=VARCHAR},
      Score = #{score,jdbcType=DECIMAL},
      Order = #{order,jdbcType=INTEGER},
      InputScore = #{inputscore,jdbcType=VARCHAR},
      InputAnswer = #{inputanswer,jdbcType=LONGVARCHAR}
    where Id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.isprint.jslx.lccfd.model.Input" >
    update input
    set TmId = #{tmid,jdbcType=VARCHAR},
      InputCode = #{inputcode,jdbcType=VARCHAR},
      BaseType = #{basetype,jdbcType=VARCHAR},
      InputType = #{inputtype,jdbcType=VARCHAR},
      Score = #{score,jdbcType=DECIMAL},
      Order = #{order,jdbcType=INTEGER},
      InputScore = #{inputscore,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>