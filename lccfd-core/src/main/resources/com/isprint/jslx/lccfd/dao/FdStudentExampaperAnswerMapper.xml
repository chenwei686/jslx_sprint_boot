<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.isprint.jslx.lccfd.dao.FdStudentExampaperAnswerMapper" >
  <resultMap id="BaseResultMap" type="com.isprint.jslx.lccfd.model.FdStudentExampaperAnswer" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="student_id" property="studentId" jdbcType="INTEGER" />
    <result column="score" property="score" jdbcType="DECIMAL" />
    <result column="answer" property="answer" jdbcType="VARCHAR" />
    <result column="timu_id" property="timuId" jdbcType="CHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="exampaper_id" property="exampaperId" jdbcType="INTEGER" />
    <result column="student_exampaper_id" property="studentExampaperId" jdbcType="INTEGER" />
    <result column="is_right" property="isRight" jdbcType="BIT" />
    <result column="main_knowledge_id" property="mainKnowledgeId" jdbcType="INTEGER" />
    <result column="difficult_level" property="difficultLevel" jdbcType="TINYINT" />
    <result column="school_id" property="schoolId" jdbcType="INTEGER" />
    <result column="grade_id" property="gradeId" jdbcType="INTEGER" />
    <result column="classes_id" property="classesId" jdbcType="INTEGER" />
    <result column="year_id" property="yearId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      id, student_id, score, answer, timu_id, start_time, end_time, exampaper_id, student_exampaper_id, 
      is_right, main_knowledge_id, difficult_level, school_id, grade_id, classes_id, year_id, 
      create_time
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.isprint.jslx.lccfd.model.FdStudentExampaperAnswerQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fd_student_exampaper_answer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    id,student_id,score,answer,timu_id,start_time,end_time,exampaper_id,student_exampaper_id,is_right,main_knowledge_id,difficult_level,school_id,grade_id,classes_id,year_id,create_time
    from fd_student_exampaper_answer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from fd_student_exampaper_answer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.isprint.jslx.lccfd.model.FdStudentExampaperAnswerQuery" >
    delete from fd_student_exampaper_answer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.isprint.jslx.lccfd.model.FdStudentExampaperAnswer" >
    insert into fd_student_exampaper_answer (id, student_id, score, 
      answer, timu_id, start_time, 
      end_time, exampaper_id, student_exampaper_id, 
      is_right, main_knowledge_id, difficult_level, 
      school_id, grade_id, classes_id, 
      year_id, create_time)
    values (#{id,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, #{score,jdbcType=DECIMAL}, 
      #{answer,jdbcType=VARCHAR}, #{timuId,jdbcType=CHAR}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{exampaperId,jdbcType=INTEGER}, #{studentExampaperId,jdbcType=INTEGER}, 
      #{isRight,jdbcType=BIT}, #{mainKnowledgeId,jdbcType=INTEGER}, #{difficultLevel,jdbcType=TINYINT}, 
      #{schoolId,jdbcType=INTEGER}, #{gradeId,jdbcType=INTEGER}, #{classesId,jdbcType=INTEGER}, 
      #{yearId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.isprint.jslx.lccfd.model.FdStudentExampaperAnswer" >
    insert into fd_student_exampaper_answer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="answer != null" >
        answer,
      </if>
      <if test="timuId != null" >
        timu_id,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="exampaperId != null" >
        exampaper_id,
      </if>
      <if test="studentExampaperId != null" >
        student_exampaper_id,
      </if>
      <if test="isRight != null" >
        is_right,
      </if>
      <if test="mainKnowledgeId != null" >
        main_knowledge_id,
      </if>
      <if test="difficultLevel != null" >
        difficult_level,
      </if>
      <if test="schoolId != null" >
        school_id,
      </if>
      <if test="gradeId != null" >
        grade_id,
      </if>
      <if test="classesId != null" >
        classes_id,
      </if>
      <if test="yearId != null" >
        year_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        #{score,jdbcType=DECIMAL},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="timuId != null" >
        #{timuId,jdbcType=CHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="exampaperId != null" >
        #{exampaperId,jdbcType=INTEGER},
      </if>
      <if test="studentExampaperId != null" >
        #{studentExampaperId,jdbcType=INTEGER},
      </if>
      <if test="isRight != null" >
        #{isRight,jdbcType=BIT},
      </if>
      <if test="mainKnowledgeId != null" >
        #{mainKnowledgeId,jdbcType=INTEGER},
      </if>
      <if test="difficultLevel != null" >
        #{difficultLevel,jdbcType=TINYINT},
      </if>
      <if test="schoolId != null" >
        #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null" >
        #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="classesId != null" >
        #{classesId,jdbcType=INTEGER},
      </if>
      <if test="yearId != null" >
        #{yearId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.isprint.jslx.lccfd.model.FdStudentExampaperAnswerQuery" resultType="java.lang.Integer" >
    select count(*) from fd_student_exampaper_answer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update fd_student_exampaper_answer
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=DECIMAL},
      </if>
      <if test="record.answer != null" >
        answer = #{record.answer,jdbcType=VARCHAR},
      </if>
      <if test="record.timuId != null" >
        timu_id = #{record.timuId,jdbcType=CHAR},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.exampaperId != null" >
        exampaper_id = #{record.exampaperId,jdbcType=INTEGER},
      </if>
      <if test="record.studentExampaperId != null" >
        student_exampaper_id = #{record.studentExampaperId,jdbcType=INTEGER},
      </if>
      <if test="record.isRight != null" >
        is_right = #{record.isRight,jdbcType=BIT},
      </if>
      <if test="record.mainKnowledgeId != null" >
        main_knowledge_id = #{record.mainKnowledgeId,jdbcType=INTEGER},
      </if>
      <if test="record.difficultLevel != null" >
        difficult_level = #{record.difficultLevel,jdbcType=TINYINT},
      </if>
      <if test="record.schoolId != null" >
        school_id = #{record.schoolId,jdbcType=INTEGER},
      </if>
      <if test="record.gradeId != null" >
        grade_id = #{record.gradeId,jdbcType=INTEGER},
      </if>
      <if test="record.classesId != null" >
        classes_id = #{record.classesId,jdbcType=INTEGER},
      </if>
      <if test="record.yearId != null" >
        year_id = #{record.yearId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update fd_student_exampaper_answer
    set id = #{record.id,jdbcType=INTEGER},
      student_id = #{record.studentId,jdbcType=INTEGER},
      score = #{record.score,jdbcType=DECIMAL},
      answer = #{record.answer,jdbcType=VARCHAR},
      timu_id = #{record.timuId,jdbcType=CHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      exampaper_id = #{record.exampaperId,jdbcType=INTEGER},
      student_exampaper_id = #{record.studentExampaperId,jdbcType=INTEGER},
      is_right = #{record.isRight,jdbcType=BIT},
      main_knowledge_id = #{record.mainKnowledgeId,jdbcType=INTEGER},
      difficult_level = #{record.difficultLevel,jdbcType=TINYINT},
      school_id = #{record.schoolId,jdbcType=INTEGER},
      grade_id = #{record.gradeId,jdbcType=INTEGER},
      classes_id = #{record.classesId,jdbcType=INTEGER},
      year_id = #{record.yearId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.isprint.jslx.lccfd.model.FdStudentExampaperAnswer" >
    update fd_student_exampaper_answer
    <set >
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=DECIMAL},
      </if>
      <if test="answer != null" >
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="timuId != null" >
        timu_id = #{timuId,jdbcType=CHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="exampaperId != null" >
        exampaper_id = #{exampaperId,jdbcType=INTEGER},
      </if>
      <if test="studentExampaperId != null" >
        student_exampaper_id = #{studentExampaperId,jdbcType=INTEGER},
      </if>
      <if test="isRight != null" >
        is_right = #{isRight,jdbcType=BIT},
      </if>
      <if test="mainKnowledgeId != null" >
        main_knowledge_id = #{mainKnowledgeId,jdbcType=INTEGER},
      </if>
      <if test="difficultLevel != null" >
        difficult_level = #{difficultLevel,jdbcType=TINYINT},
      </if>
      <if test="schoolId != null" >
        school_id = #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null" >
        grade_id = #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="classesId != null" >
        classes_id = #{classesId,jdbcType=INTEGER},
      </if>
      <if test="yearId != null" >
        year_id = #{yearId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.isprint.jslx.lccfd.model.FdStudentExampaperAnswer" >
    update fd_student_exampaper_answer
    set student_id = #{studentId,jdbcType=INTEGER},
      score = #{score,jdbcType=DECIMAL},
      answer = #{answer,jdbcType=VARCHAR},
      timu_id = #{timuId,jdbcType=CHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      exampaper_id = #{exampaperId,jdbcType=INTEGER},
      student_exampaper_id = #{studentExampaperId,jdbcType=INTEGER},
      is_right = #{isRight,jdbcType=BIT},
      main_knowledge_id = #{mainKnowledgeId,jdbcType=INTEGER},
      difficult_level = #{difficultLevel,jdbcType=TINYINT},
      school_id = #{schoolId,jdbcType=INTEGER},
      grade_id = #{gradeId,jdbcType=INTEGER},
      classes_id = #{classesId,jdbcType=INTEGER},
      year_id = #{yearId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>