<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.isprint.jslx.lccfd.dao.FdStudentOrderMapper" >
  <resultMap id="BaseResultMap" type="com.isprint.jslx.lccfd.model.FdStudentOrder" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="package_id" property="packageId" jdbcType="INTEGER" />
    <result column="package_activity_id" property="packageActivityId" jdbcType="INTEGER" />
    <result column="package_money" property="packageMoney" jdbcType="DECIMAL" />
    <result column="package_activity_money" property="packageActivityMoney" jdbcType="DECIMAL" />
    <result column="package_activity_discount" property="packageActivityDiscount" jdbcType="DECIMAL" />
    <result column="package_coupon_id" property="packageCouponId" jdbcType="INTEGER" />
    <result column="package_coupon_code_id" property="packageCouponCodeId" jdbcType="INTEGER" />
    <result column="package_coupon_discount" property="packageCouponDiscount" jdbcType="DECIMAL" />
    <result column="pay_money" property="payMoney" jdbcType="DECIMAL" />
    <result column="student_id" property="studentId" jdbcType="INTEGER" />
    <result column="school_id" property="schoolId" jdbcType="INTEGER" />
    <result column="grade_id" property="gradeId" jdbcType="INTEGER" />
    <result column="classes_id" property="classesId" jdbcType="INTEGER" />
    <result column="year" property="year" jdbcType="CHAR" />
    <result column="pay_type" property="payType" jdbcType="CHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="is_del" property="isDel" jdbcType="BIT" />
    <result column="order_num" property="orderNum" jdbcType="VARCHAR" />
    <result column="charge_id" property="chargeId" jdbcType="CHAR" />
    <result column="pay_success_time" property="paySuccessTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      id, package_id, package_activity_id, package_money, package_activity_money, package_activity_discount, 
      package_coupon_id, package_coupon_code_id, package_coupon_discount, pay_money, student_id, 
      school_id, grade_id, classes_id, year, pay_type, status, is_del, order_num, charge_id, 
      pay_success_time, create_time
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.isprint.jslx.lccfd.model.FdStudentOrderQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fd_student_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    id,package_id,package_activity_id,package_money,package_activity_money,package_activity_discount,package_coupon_id,package_coupon_code_id,package_coupon_discount,pay_money,student_id,school_id,grade_id,classes_id,year,pay_type,status,is_del,order_num,charge_id,pay_success_time,create_time
    from fd_student_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from fd_student_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.isprint.jslx.lccfd.model.FdStudentOrderQuery" >
    delete from fd_student_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.isprint.jslx.lccfd.model.FdStudentOrder" >
    insert into fd_student_order (id, package_id, package_activity_id, 
      package_money, package_activity_money, package_activity_discount, 
      package_coupon_id, package_coupon_code_id, package_coupon_discount, 
      pay_money, student_id, school_id, 
      grade_id, classes_id, year, 
      pay_type, status, is_del, order_num, 
      charge_id, pay_success_time, create_time
      )
    values (#{id,jdbcType=BIGINT}, #{packageId,jdbcType=INTEGER}, #{packageActivityId,jdbcType=INTEGER}, 
      #{packageMoney,jdbcType=DECIMAL}, #{packageActivityMoney,jdbcType=DECIMAL}, #{packageActivityDiscount,jdbcType=DECIMAL}, 
      #{packageCouponId,jdbcType=INTEGER}, #{packageCouponCodeId,jdbcType=INTEGER}, #{packageCouponDiscount,jdbcType=DECIMAL}, 
      #{payMoney,jdbcType=DECIMAL}, #{studentId,jdbcType=INTEGER}, #{schoolId,jdbcType=INTEGER}, 
      #{gradeId,jdbcType=INTEGER}, #{classesId,jdbcType=INTEGER}, #{year,jdbcType=CHAR}, 
      #{payType,jdbcType=CHAR}, #{status,jdbcType=TINYINT}, #{isDel,jdbcType=BIT}, #{orderNum,jdbcType=VARCHAR}, 
      #{chargeId,jdbcType=CHAR}, #{paySuccessTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.isprint.jslx.lccfd.model.FdStudentOrder" >
    insert into fd_student_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="packageId != null" >
        package_id,
      </if>
      <if test="packageActivityId != null" >
        package_activity_id,
      </if>
      <if test="packageMoney != null" >
        package_money,
      </if>
      <if test="packageActivityMoney != null" >
        package_activity_money,
      </if>
      <if test="packageActivityDiscount != null" >
        package_activity_discount,
      </if>
      <if test="packageCouponId != null" >
        package_coupon_id,
      </if>
      <if test="packageCouponCodeId != null" >
        package_coupon_code_id,
      </if>
      <if test="packageCouponDiscount != null" >
        package_coupon_discount,
      </if>
      <if test="payMoney != null" >
        pay_money,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="schoolId != null" >
        school_id,
      </if>
      <if test="gradeId != null" >
        grade_id,
      </if>
      <if test="classesId != null" >
        classes_id,
      </if>
      <if test="year != null" >
        year,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="isDel != null" >
        is_del,
      </if>
      <if test="orderNum != null" >
        order_num,
      </if>
      <if test="chargeId != null" >
        charge_id,
      </if>
      <if test="paySuccessTime != null" >
        pay_success_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="packageId != null" >
        #{packageId,jdbcType=INTEGER},
      </if>
      <if test="packageActivityId != null" >
        #{packageActivityId,jdbcType=INTEGER},
      </if>
      <if test="packageMoney != null" >
        #{packageMoney,jdbcType=DECIMAL},
      </if>
      <if test="packageActivityMoney != null" >
        #{packageActivityMoney,jdbcType=DECIMAL},
      </if>
      <if test="packageActivityDiscount != null" >
        #{packageActivityDiscount,jdbcType=DECIMAL},
      </if>
      <if test="packageCouponId != null" >
        #{packageCouponId,jdbcType=INTEGER},
      </if>
      <if test="packageCouponCodeId != null" >
        #{packageCouponCodeId,jdbcType=INTEGER},
      </if>
      <if test="packageCouponDiscount != null" >
        #{packageCouponDiscount,jdbcType=DECIMAL},
      </if>
      <if test="payMoney != null" >
        #{payMoney,jdbcType=DECIMAL},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="schoolId != null" >
        #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null" >
        #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="classesId != null" >
        #{classesId,jdbcType=INTEGER},
      </if>
      <if test="year != null" >
        #{year,jdbcType=CHAR},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=CHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=BIT},
      </if>
      <if test="orderNum != null" >
        #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="chargeId != null" >
        #{chargeId,jdbcType=CHAR},
      </if>
      <if test="paySuccessTime != null" >
        #{paySuccessTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.isprint.jslx.lccfd.model.FdStudentOrderQuery" resultType="java.lang.Integer" >
    select count(*) from fd_student_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update fd_student_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.packageId != null" >
        package_id = #{record.packageId,jdbcType=INTEGER},
      </if>
      <if test="record.packageActivityId != null" >
        package_activity_id = #{record.packageActivityId,jdbcType=INTEGER},
      </if>
      <if test="record.packageMoney != null" >
        package_money = #{record.packageMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.packageActivityMoney != null" >
        package_activity_money = #{record.packageActivityMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.packageActivityDiscount != null" >
        package_activity_discount = #{record.packageActivityDiscount,jdbcType=DECIMAL},
      </if>
      <if test="record.packageCouponId != null" >
        package_coupon_id = #{record.packageCouponId,jdbcType=INTEGER},
      </if>
      <if test="record.packageCouponCodeId != null" >
        package_coupon_code_id = #{record.packageCouponCodeId,jdbcType=INTEGER},
      </if>
      <if test="record.packageCouponDiscount != null" >
        package_coupon_discount = #{record.packageCouponDiscount,jdbcType=DECIMAL},
      </if>
      <if test="record.payMoney != null" >
        pay_money = #{record.payMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.schoolId != null" >
        school_id = #{record.schoolId,jdbcType=INTEGER},
      </if>
      <if test="record.gradeId != null" >
        grade_id = #{record.gradeId,jdbcType=INTEGER},
      </if>
      <if test="record.classesId != null" >
        classes_id = #{record.classesId,jdbcType=INTEGER},
      </if>
      <if test="record.year != null" >
        year = #{record.year,jdbcType=CHAR},
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=CHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.isDel != null" >
        is_del = #{record.isDel,jdbcType=BIT},
      </if>
      <if test="record.orderNum != null" >
        order_num = #{record.orderNum,jdbcType=VARCHAR},
      </if>
      <if test="record.chargeId != null" >
        charge_id = #{record.chargeId,jdbcType=CHAR},
      </if>
      <if test="record.paySuccessTime != null" >
        pay_success_time = #{record.paySuccessTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update fd_student_order
    set id = #{record.id,jdbcType=BIGINT},
      package_id = #{record.packageId,jdbcType=INTEGER},
      package_activity_id = #{record.packageActivityId,jdbcType=INTEGER},
      package_money = #{record.packageMoney,jdbcType=DECIMAL},
      package_activity_money = #{record.packageActivityMoney,jdbcType=DECIMAL},
      package_activity_discount = #{record.packageActivityDiscount,jdbcType=DECIMAL},
      package_coupon_id = #{record.packageCouponId,jdbcType=INTEGER},
      package_coupon_code_id = #{record.packageCouponCodeId,jdbcType=INTEGER},
      package_coupon_discount = #{record.packageCouponDiscount,jdbcType=DECIMAL},
      pay_money = #{record.payMoney,jdbcType=DECIMAL},
      student_id = #{record.studentId,jdbcType=INTEGER},
      school_id = #{record.schoolId,jdbcType=INTEGER},
      grade_id = #{record.gradeId,jdbcType=INTEGER},
      classes_id = #{record.classesId,jdbcType=INTEGER},
      year = #{record.year,jdbcType=CHAR},
      pay_type = #{record.payType,jdbcType=CHAR},
      status = #{record.status,jdbcType=TINYINT},
      is_del = #{record.isDel,jdbcType=BIT},
      order_num = #{record.orderNum,jdbcType=VARCHAR},
      charge_id = #{record.chargeId,jdbcType=CHAR},
      pay_success_time = #{record.paySuccessTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.isprint.jslx.lccfd.model.FdStudentOrder" >
    update fd_student_order
    <set >
      <if test="packageId != null" >
        package_id = #{packageId,jdbcType=INTEGER},
      </if>
      <if test="packageActivityId != null" >
        package_activity_id = #{packageActivityId,jdbcType=INTEGER},
      </if>
      <if test="packageMoney != null" >
        package_money = #{packageMoney,jdbcType=DECIMAL},
      </if>
      <if test="packageActivityMoney != null" >
        package_activity_money = #{packageActivityMoney,jdbcType=DECIMAL},
      </if>
      <if test="packageActivityDiscount != null" >
        package_activity_discount = #{packageActivityDiscount,jdbcType=DECIMAL},
      </if>
      <if test="packageCouponId != null" >
        package_coupon_id = #{packageCouponId,jdbcType=INTEGER},
      </if>
      <if test="packageCouponCodeId != null" >
        package_coupon_code_id = #{packageCouponCodeId,jdbcType=INTEGER},
      </if>
      <if test="packageCouponDiscount != null" >
        package_coupon_discount = #{packageCouponDiscount,jdbcType=DECIMAL},
      </if>
      <if test="payMoney != null" >
        pay_money = #{payMoney,jdbcType=DECIMAL},
      </if>
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="schoolId != null" >
        school_id = #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null" >
        grade_id = #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="classesId != null" >
        classes_id = #{classesId,jdbcType=INTEGER},
      </if>
      <if test="year != null" >
        year = #{year,jdbcType=CHAR},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=CHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="isDel != null" >
        is_del = #{isDel,jdbcType=BIT},
      </if>
      <if test="orderNum != null" >
        order_num = #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="chargeId != null" >
        charge_id = #{chargeId,jdbcType=CHAR},
      </if>
      <if test="paySuccessTime != null" >
        pay_success_time = #{paySuccessTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.isprint.jslx.lccfd.model.FdStudentOrder" >
    update fd_student_order
    set package_id = #{packageId,jdbcType=INTEGER},
      package_activity_id = #{packageActivityId,jdbcType=INTEGER},
      package_money = #{packageMoney,jdbcType=DECIMAL},
      package_activity_money = #{packageActivityMoney,jdbcType=DECIMAL},
      package_activity_discount = #{packageActivityDiscount,jdbcType=DECIMAL},
      package_coupon_id = #{packageCouponId,jdbcType=INTEGER},
      package_coupon_code_id = #{packageCouponCodeId,jdbcType=INTEGER},
      package_coupon_discount = #{packageCouponDiscount,jdbcType=DECIMAL},
      pay_money = #{payMoney,jdbcType=DECIMAL},
      student_id = #{studentId,jdbcType=INTEGER},
      school_id = #{schoolId,jdbcType=INTEGER},
      grade_id = #{gradeId,jdbcType=INTEGER},
      classes_id = #{classesId,jdbcType=INTEGER},
      year = #{year,jdbcType=CHAR},
      pay_type = #{payType,jdbcType=CHAR},
      status = #{status,jdbcType=TINYINT},
      is_del = #{isDel,jdbcType=BIT},
      order_num = #{orderNum,jdbcType=VARCHAR},
      charge_id = #{chargeId,jdbcType=CHAR},
      pay_success_time = #{paySuccessTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>