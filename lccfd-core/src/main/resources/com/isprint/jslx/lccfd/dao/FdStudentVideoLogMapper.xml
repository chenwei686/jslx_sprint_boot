<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.isprint.jslx.lccfd.dao.FdStudentVideoLogMapper" >
  <resultMap id="BaseResultMap" type="com.isprint.jslx.lccfd.model.FdStudentVideoLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="student_id" property="studentId" jdbcType="INTEGER" />
    <result column="video_code" property="videoCode" jdbcType="CHAR" />
    <result column="time" property="time" jdbcType="INTEGER" />
    <result column="student_search_id" property="studentSearchId" jdbcType="INTEGER" />
    <result column="school_id" property="schoolId" jdbcType="INTEGER" />
    <result column="grade_id" property="gradeId" jdbcType="INTEGER" />
    <result column="classes_id" property="classesId" jdbcType="INTEGER" />
    <result column="year" property="year" jdbcType="CHAR" />
    <result column="source" property="source" jdbcType="TINYINT" />
    <result column="timu_id" property="timuId" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      id, student_id, video_code, time, student_search_id, school_id, grade_id, classes_id, 
      year, source, timu_id, create_time
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.isprint.jslx.lccfd.model.FdStudentVideoLogQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fd_student_video_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    id,student_id,video_code,time,student_search_id,school_id,grade_id,classes_id,year,source,timu_id,create_time
    from fd_student_video_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from fd_student_video_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.isprint.jslx.lccfd.model.FdStudentVideoLogQuery" >
    delete from fd_student_video_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.isprint.jslx.lccfd.model.FdStudentVideoLog" >
    insert into fd_student_video_log (id, student_id, video_code, 
      time, student_search_id, school_id, 
      grade_id, classes_id, year, 
      source, timu_id, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, #{videoCode,jdbcType=CHAR}, 
      #{time,jdbcType=INTEGER}, #{studentSearchId,jdbcType=INTEGER}, #{schoolId,jdbcType=INTEGER}, 
      #{gradeId,jdbcType=INTEGER}, #{classesId,jdbcType=INTEGER}, #{year,jdbcType=CHAR}, 
      #{source,jdbcType=TINYINT}, #{timuId,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.isprint.jslx.lccfd.model.FdStudentVideoLog" >
    insert into fd_student_video_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="videoCode != null" >
        video_code,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="studentSearchId != null" >
        student_search_id,
      </if>
      <if test="schoolId != null" >
        school_id,
      </if>
      <if test="gradeId != null" >
        grade_id,
      </if>
      <if test="classesId != null" >
        classes_id,
      </if>
      <if test="year != null" >
        year,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="timuId != null" >
        timu_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="videoCode != null" >
        #{videoCode,jdbcType=CHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=INTEGER},
      </if>
      <if test="studentSearchId != null" >
        #{studentSearchId,jdbcType=INTEGER},
      </if>
      <if test="schoolId != null" >
        #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null" >
        #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="classesId != null" >
        #{classesId,jdbcType=INTEGER},
      </if>
      <if test="year != null" >
        #{year,jdbcType=CHAR},
      </if>
      <if test="source != null" >
        #{source,jdbcType=TINYINT},
      </if>
      <if test="timuId != null" >
        #{timuId,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.isprint.jslx.lccfd.model.FdStudentVideoLogQuery" resultType="java.lang.Integer" >
    select count(*) from fd_student_video_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update fd_student_video_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.videoCode != null" >
        video_code = #{record.videoCode,jdbcType=CHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=INTEGER},
      </if>
      <if test="record.studentSearchId != null" >
        student_search_id = #{record.studentSearchId,jdbcType=INTEGER},
      </if>
      <if test="record.schoolId != null" >
        school_id = #{record.schoolId,jdbcType=INTEGER},
      </if>
      <if test="record.gradeId != null" >
        grade_id = #{record.gradeId,jdbcType=INTEGER},
      </if>
      <if test="record.classesId != null" >
        classes_id = #{record.classesId,jdbcType=INTEGER},
      </if>
      <if test="record.year != null" >
        year = #{record.year,jdbcType=CHAR},
      </if>
      <if test="record.source != null" >
        source = #{record.source,jdbcType=TINYINT},
      </if>
      <if test="record.timuId != null" >
        timu_id = #{record.timuId,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update fd_student_video_log
    set id = #{record.id,jdbcType=INTEGER},
      student_id = #{record.studentId,jdbcType=INTEGER},
      video_code = #{record.videoCode,jdbcType=CHAR},
      time = #{record.time,jdbcType=INTEGER},
      student_search_id = #{record.studentSearchId,jdbcType=INTEGER},
      school_id = #{record.schoolId,jdbcType=INTEGER},
      grade_id = #{record.gradeId,jdbcType=INTEGER},
      classes_id = #{record.classesId,jdbcType=INTEGER},
      year = #{record.year,jdbcType=CHAR},
      source = #{record.source,jdbcType=TINYINT},
      timu_id = #{record.timuId,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.isprint.jslx.lccfd.model.FdStudentVideoLog" >
    update fd_student_video_log
    <set >
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="videoCode != null" >
        video_code = #{videoCode,jdbcType=CHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=INTEGER},
      </if>
      <if test="studentSearchId != null" >
        student_search_id = #{studentSearchId,jdbcType=INTEGER},
      </if>
      <if test="schoolId != null" >
        school_id = #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null" >
        grade_id = #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="classesId != null" >
        classes_id = #{classesId,jdbcType=INTEGER},
      </if>
      <if test="year != null" >
        year = #{year,jdbcType=CHAR},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=TINYINT},
      </if>
      <if test="timuId != null" >
        timu_id = #{timuId,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.isprint.jslx.lccfd.model.FdStudentVideoLog" >
    update fd_student_video_log
    set student_id = #{studentId,jdbcType=INTEGER},
      video_code = #{videoCode,jdbcType=CHAR},
      time = #{time,jdbcType=INTEGER},
      student_search_id = #{studentSearchId,jdbcType=INTEGER},
      school_id = #{schoolId,jdbcType=INTEGER},
      grade_id = #{gradeId,jdbcType=INTEGER},
      classes_id = #{classesId,jdbcType=INTEGER},
      year = #{year,jdbcType=CHAR},
      source = #{source,jdbcType=TINYINT},
      timu_id = #{timuId,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>