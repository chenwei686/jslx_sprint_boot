<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.isprint.jslx.lccfd.dao.FdTeacherMonthReportMapper" >
  <resultMap id="BaseResultMap" type="com.isprint.jslx.lccfd.model.FdTeacherMonthReport" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="school_id" property="schoolId" jdbcType="INTEGER" />
    <result column="grade_id" property="gradeId" jdbcType="INTEGER" />
    <result column="classes_id" property="classesId" jdbcType="INTEGER" />
    <result column="year_id" property="yearId" jdbcType="INTEGER" />
    <result column="subject_id" property="subjectId" jdbcType="INTEGER" />
    <result column="parent_subject_id" property="parentSubjectId" jdbcType="INTEGER" />
    <result column="start_date" property="startDate" jdbcType="DATE" />
    <result column="end_date" property="endDate" jdbcType="DATE" />
    <result column="month" property="month" jdbcType="CHAR" />
    <result column="search_num" property="searchNum" jdbcType="INTEGER" />
    <result column="student_num" property="studentNum" jdbcType="INTEGER" />
    <result column="search_avg" property="searchAvg" jdbcType="INTEGER" />
    <result column="search_avg_ranking" property="searchAvgRanking" jdbcType="INTEGER" />
    <result column="search_avg_last" property="searchAvgLast" jdbcType="INTEGER" />
    <result column="search_avg_treed" property="searchAvgTreed" jdbcType="TINYINT" />
    <result column="correct_num" property="correctNum" jdbcType="INTEGER" />
    <result column="correct_pro" property="correctPro" jdbcType="DECIMAL" />
    <result column="correct_pro_last" property="correctProLast" jdbcType="DECIMAL" />
    <result column="correct_pro_treed" property="correctProTreed" jdbcType="TINYINT" />
    <result column="correct_pro_ranking" property="correctProRanking" jdbcType="INTEGER" />
    <result column="exampaper_avg_pro" property="exampaperAvgPro" jdbcType="DECIMAL" />
    <result column="exampaper_score" property="exampaperScore" jdbcType="DECIMAL" />
    <result column="exampaper_total_score" property="exampaperTotalScore" jdbcType="DECIMAL" />
    <result column="exampaper_num" property="exampaperNum" jdbcType="INTEGER" />
    <result column="exampaper_avg_pro_last" property="exampaperAvgProLast" jdbcType="DECIMAL" />
    <result column="exampaper_avg_pro_ranking" property="exampaperAvgProRanking" jdbcType="INTEGER" />
    <result column="exampaper_avg_pro_treed" property="exampaperAvgProTreed" jdbcType="TINYINT" />
    <result column="practice_num" property="practiceNum" jdbcType="INTEGER" />
    <result column="practice_finish_num" property="practiceFinishNum" jdbcType="INTEGER" />
    <result column="practice_unfinished_num" property="practiceUnfinishedNum" jdbcType="INTEGER" />
    <result column="practice_pro" property="practicePro" jdbcType="DECIMAL" />
    <result column="practice_pro_last" property="practiceProLast" jdbcType="DECIMAL" />
    <result column="practice_pro_treed" property="practiceProTreed" jdbcType="TINYINT" />
    <result column="practice_pro_renking" property="practiceProRenking" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      id, school_id, grade_id, classes_id, year_id, subject_id, parent_subject_id, start_date, 
      end_date, month, search_num, student_num, search_avg, search_avg_ranking, search_avg_last, 
      search_avg_treed, correct_num, correct_pro, correct_pro_last, correct_pro_treed, 
      correct_pro_ranking, exampaper_avg_pro, exampaper_score, exampaper_total_score, exampaper_num, 
      exampaper_avg_pro_last, exampaper_avg_pro_ranking, exampaper_avg_pro_treed, practice_num, 
      practice_finish_num, practice_unfinished_num, practice_pro, practice_pro_last, practice_pro_treed, 
      practice_pro_renking, update_time, create_time
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.isprint.jslx.lccfd.model.FdTeacherMonthReportQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fd_teacher_month_report
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    id,school_id,grade_id,classes_id,year_id,subject_id,parent_subject_id,start_date,end_date,month,search_num,student_num,search_avg,search_avg_ranking,search_avg_last,search_avg_treed,correct_num,correct_pro,correct_pro_last,correct_pro_treed,correct_pro_ranking,exampaper_avg_pro,exampaper_score,exampaper_total_score,exampaper_num,exampaper_avg_pro_last,exampaper_avg_pro_ranking,exampaper_avg_pro_treed,practice_num,practice_finish_num,practice_unfinished_num,practice_pro,practice_pro_last,practice_pro_treed,practice_pro_renking,update_time,create_time
    from fd_teacher_month_report
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from fd_teacher_month_report
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.isprint.jslx.lccfd.model.FdTeacherMonthReportQuery" >
    delete from fd_teacher_month_report
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.isprint.jslx.lccfd.model.FdTeacherMonthReport" >
    insert into fd_teacher_month_report (id, school_id, grade_id, 
      classes_id, year_id, subject_id, 
      parent_subject_id, start_date, end_date, 
      month, search_num, student_num, 
      search_avg, search_avg_ranking, search_avg_last, 
      search_avg_treed, correct_num, correct_pro, 
      correct_pro_last, correct_pro_treed, correct_pro_ranking, 
      exampaper_avg_pro, exampaper_score, exampaper_total_score, 
      exampaper_num, exampaper_avg_pro_last, exampaper_avg_pro_ranking, 
      exampaper_avg_pro_treed, practice_num, practice_finish_num, 
      practice_unfinished_num, practice_pro, practice_pro_last, 
      practice_pro_treed, practice_pro_renking, update_time, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{schoolId,jdbcType=INTEGER}, #{gradeId,jdbcType=INTEGER}, 
      #{classesId,jdbcType=INTEGER}, #{yearId,jdbcType=INTEGER}, #{subjectId,jdbcType=INTEGER}, 
      #{parentSubjectId,jdbcType=INTEGER}, #{startDate,jdbcType=DATE}, #{endDate,jdbcType=DATE}, 
      #{month,jdbcType=CHAR}, #{searchNum,jdbcType=INTEGER}, #{studentNum,jdbcType=INTEGER}, 
      #{searchAvg,jdbcType=INTEGER}, #{searchAvgRanking,jdbcType=INTEGER}, #{searchAvgLast,jdbcType=INTEGER}, 
      #{searchAvgTreed,jdbcType=TINYINT}, #{correctNum,jdbcType=INTEGER}, #{correctPro,jdbcType=DECIMAL}, 
      #{correctProLast,jdbcType=DECIMAL}, #{correctProTreed,jdbcType=TINYINT}, #{correctProRanking,jdbcType=INTEGER}, 
      #{exampaperAvgPro,jdbcType=DECIMAL}, #{exampaperScore,jdbcType=DECIMAL}, #{exampaperTotalScore,jdbcType=DECIMAL}, 
      #{exampaperNum,jdbcType=INTEGER}, #{exampaperAvgProLast,jdbcType=DECIMAL}, #{exampaperAvgProRanking,jdbcType=INTEGER}, 
      #{exampaperAvgProTreed,jdbcType=TINYINT}, #{practiceNum,jdbcType=INTEGER}, #{practiceFinishNum,jdbcType=INTEGER}, 
      #{practiceUnfinishedNum,jdbcType=INTEGER}, #{practicePro,jdbcType=DECIMAL}, #{practiceProLast,jdbcType=DECIMAL}, 
      #{practiceProTreed,jdbcType=TINYINT}, #{practiceProRenking,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.isprint.jslx.lccfd.model.FdTeacherMonthReport" >
    insert into fd_teacher_month_report
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="schoolId != null" >
        school_id,
      </if>
      <if test="gradeId != null" >
        grade_id,
      </if>
      <if test="classesId != null" >
        classes_id,
      </if>
      <if test="yearId != null" >
        year_id,
      </if>
      <if test="subjectId != null" >
        subject_id,
      </if>
      <if test="parentSubjectId != null" >
        parent_subject_id,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="month != null" >
        month,
      </if>
      <if test="searchNum != null" >
        search_num,
      </if>
      <if test="studentNum != null" >
        student_num,
      </if>
      <if test="searchAvg != null" >
        search_avg,
      </if>
      <if test="searchAvgRanking != null" >
        search_avg_ranking,
      </if>
      <if test="searchAvgLast != null" >
        search_avg_last,
      </if>
      <if test="searchAvgTreed != null" >
        search_avg_treed,
      </if>
      <if test="correctNum != null" >
        correct_num,
      </if>
      <if test="correctPro != null" >
        correct_pro,
      </if>
      <if test="correctProLast != null" >
        correct_pro_last,
      </if>
      <if test="correctProTreed != null" >
        correct_pro_treed,
      </if>
      <if test="correctProRanking != null" >
        correct_pro_ranking,
      </if>
      <if test="exampaperAvgPro != null" >
        exampaper_avg_pro,
      </if>
      <if test="exampaperScore != null" >
        exampaper_score,
      </if>
      <if test="exampaperTotalScore != null" >
        exampaper_total_score,
      </if>
      <if test="exampaperNum != null" >
        exampaper_num,
      </if>
      <if test="exampaperAvgProLast != null" >
        exampaper_avg_pro_last,
      </if>
      <if test="exampaperAvgProRanking != null" >
        exampaper_avg_pro_ranking,
      </if>
      <if test="exampaperAvgProTreed != null" >
        exampaper_avg_pro_treed,
      </if>
      <if test="practiceNum != null" >
        practice_num,
      </if>
      <if test="practiceFinishNum != null" >
        practice_finish_num,
      </if>
      <if test="practiceUnfinishedNum != null" >
        practice_unfinished_num,
      </if>
      <if test="practicePro != null" >
        practice_pro,
      </if>
      <if test="practiceProLast != null" >
        practice_pro_last,
      </if>
      <if test="practiceProTreed != null" >
        practice_pro_treed,
      </if>
      <if test="practiceProRenking != null" >
        practice_pro_renking,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="schoolId != null" >
        #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null" >
        #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="classesId != null" >
        #{classesId,jdbcType=INTEGER},
      </if>
      <if test="yearId != null" >
        #{yearId,jdbcType=INTEGER},
      </if>
      <if test="subjectId != null" >
        #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="parentSubjectId != null" >
        #{parentSubjectId,jdbcType=INTEGER},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=DATE},
      </if>
      <if test="month != null" >
        #{month,jdbcType=CHAR},
      </if>
      <if test="searchNum != null" >
        #{searchNum,jdbcType=INTEGER},
      </if>
      <if test="studentNum != null" >
        #{studentNum,jdbcType=INTEGER},
      </if>
      <if test="searchAvg != null" >
        #{searchAvg,jdbcType=INTEGER},
      </if>
      <if test="searchAvgRanking != null" >
        #{searchAvgRanking,jdbcType=INTEGER},
      </if>
      <if test="searchAvgLast != null" >
        #{searchAvgLast,jdbcType=INTEGER},
      </if>
      <if test="searchAvgTreed != null" >
        #{searchAvgTreed,jdbcType=TINYINT},
      </if>
      <if test="correctNum != null" >
        #{correctNum,jdbcType=INTEGER},
      </if>
      <if test="correctPro != null" >
        #{correctPro,jdbcType=DECIMAL},
      </if>
      <if test="correctProLast != null" >
        #{correctProLast,jdbcType=DECIMAL},
      </if>
      <if test="correctProTreed != null" >
        #{correctProTreed,jdbcType=TINYINT},
      </if>
      <if test="correctProRanking != null" >
        #{correctProRanking,jdbcType=INTEGER},
      </if>
      <if test="exampaperAvgPro != null" >
        #{exampaperAvgPro,jdbcType=DECIMAL},
      </if>
      <if test="exampaperScore != null" >
        #{exampaperScore,jdbcType=DECIMAL},
      </if>
      <if test="exampaperTotalScore != null" >
        #{exampaperTotalScore,jdbcType=DECIMAL},
      </if>
      <if test="exampaperNum != null" >
        #{exampaperNum,jdbcType=INTEGER},
      </if>
      <if test="exampaperAvgProLast != null" >
        #{exampaperAvgProLast,jdbcType=DECIMAL},
      </if>
      <if test="exampaperAvgProRanking != null" >
        #{exampaperAvgProRanking,jdbcType=INTEGER},
      </if>
      <if test="exampaperAvgProTreed != null" >
        #{exampaperAvgProTreed,jdbcType=TINYINT},
      </if>
      <if test="practiceNum != null" >
        #{practiceNum,jdbcType=INTEGER},
      </if>
      <if test="practiceFinishNum != null" >
        #{practiceFinishNum,jdbcType=INTEGER},
      </if>
      <if test="practiceUnfinishedNum != null" >
        #{practiceUnfinishedNum,jdbcType=INTEGER},
      </if>
      <if test="practicePro != null" >
        #{practicePro,jdbcType=DECIMAL},
      </if>
      <if test="practiceProLast != null" >
        #{practiceProLast,jdbcType=DECIMAL},
      </if>
      <if test="practiceProTreed != null" >
        #{practiceProTreed,jdbcType=TINYINT},
      </if>
      <if test="practiceProRenking != null" >
        #{practiceProRenking,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.isprint.jslx.lccfd.model.FdTeacherMonthReportQuery" resultType="java.lang.Integer" >
    select count(*) from fd_teacher_month_report
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update fd_teacher_month_report
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.schoolId != null" >
        school_id = #{record.schoolId,jdbcType=INTEGER},
      </if>
      <if test="record.gradeId != null" >
        grade_id = #{record.gradeId,jdbcType=INTEGER},
      </if>
      <if test="record.classesId != null" >
        classes_id = #{record.classesId,jdbcType=INTEGER},
      </if>
      <if test="record.yearId != null" >
        year_id = #{record.yearId,jdbcType=INTEGER},
      </if>
      <if test="record.subjectId != null" >
        subject_id = #{record.subjectId,jdbcType=INTEGER},
      </if>
      <if test="record.parentSubjectId != null" >
        parent_subject_id = #{record.parentSubjectId,jdbcType=INTEGER},
      </if>
      <if test="record.startDate != null" >
        start_date = #{record.startDate,jdbcType=DATE},
      </if>
      <if test="record.endDate != null" >
        end_date = #{record.endDate,jdbcType=DATE},
      </if>
      <if test="record.month != null" >
        month = #{record.month,jdbcType=CHAR},
      </if>
      <if test="record.searchNum != null" >
        search_num = #{record.searchNum,jdbcType=INTEGER},
      </if>
      <if test="record.studentNum != null" >
        student_num = #{record.studentNum,jdbcType=INTEGER},
      </if>
      <if test="record.searchAvg != null" >
        search_avg = #{record.searchAvg,jdbcType=INTEGER},
      </if>
      <if test="record.searchAvgRanking != null" >
        search_avg_ranking = #{record.searchAvgRanking,jdbcType=INTEGER},
      </if>
      <if test="record.searchAvgLast != null" >
        search_avg_last = #{record.searchAvgLast,jdbcType=INTEGER},
      </if>
      <if test="record.searchAvgTreed != null" >
        search_avg_treed = #{record.searchAvgTreed,jdbcType=TINYINT},
      </if>
      <if test="record.correctNum != null" >
        correct_num = #{record.correctNum,jdbcType=INTEGER},
      </if>
      <if test="record.correctPro != null" >
        correct_pro = #{record.correctPro,jdbcType=DECIMAL},
      </if>
      <if test="record.correctProLast != null" >
        correct_pro_last = #{record.correctProLast,jdbcType=DECIMAL},
      </if>
      <if test="record.correctProTreed != null" >
        correct_pro_treed = #{record.correctProTreed,jdbcType=TINYINT},
      </if>
      <if test="record.correctProRanking != null" >
        correct_pro_ranking = #{record.correctProRanking,jdbcType=INTEGER},
      </if>
      <if test="record.exampaperAvgPro != null" >
        exampaper_avg_pro = #{record.exampaperAvgPro,jdbcType=DECIMAL},
      </if>
      <if test="record.exampaperScore != null" >
        exampaper_score = #{record.exampaperScore,jdbcType=DECIMAL},
      </if>
      <if test="record.exampaperTotalScore != null" >
        exampaper_total_score = #{record.exampaperTotalScore,jdbcType=DECIMAL},
      </if>
      <if test="record.exampaperNum != null" >
        exampaper_num = #{record.exampaperNum,jdbcType=INTEGER},
      </if>
      <if test="record.exampaperAvgProLast != null" >
        exampaper_avg_pro_last = #{record.exampaperAvgProLast,jdbcType=DECIMAL},
      </if>
      <if test="record.exampaperAvgProRanking != null" >
        exampaper_avg_pro_ranking = #{record.exampaperAvgProRanking,jdbcType=INTEGER},
      </if>
      <if test="record.exampaperAvgProTreed != null" >
        exampaper_avg_pro_treed = #{record.exampaperAvgProTreed,jdbcType=TINYINT},
      </if>
      <if test="record.practiceNum != null" >
        practice_num = #{record.practiceNum,jdbcType=INTEGER},
      </if>
      <if test="record.practiceFinishNum != null" >
        practice_finish_num = #{record.practiceFinishNum,jdbcType=INTEGER},
      </if>
      <if test="record.practiceUnfinishedNum != null" >
        practice_unfinished_num = #{record.practiceUnfinishedNum,jdbcType=INTEGER},
      </if>
      <if test="record.practicePro != null" >
        practice_pro = #{record.practicePro,jdbcType=DECIMAL},
      </if>
      <if test="record.practiceProLast != null" >
        practice_pro_last = #{record.practiceProLast,jdbcType=DECIMAL},
      </if>
      <if test="record.practiceProTreed != null" >
        practice_pro_treed = #{record.practiceProTreed,jdbcType=TINYINT},
      </if>
      <if test="record.practiceProRenking != null" >
        practice_pro_renking = #{record.practiceProRenking,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update fd_teacher_month_report
    set id = #{record.id,jdbcType=INTEGER},
      school_id = #{record.schoolId,jdbcType=INTEGER},
      grade_id = #{record.gradeId,jdbcType=INTEGER},
      classes_id = #{record.classesId,jdbcType=INTEGER},
      year_id = #{record.yearId,jdbcType=INTEGER},
      subject_id = #{record.subjectId,jdbcType=INTEGER},
      parent_subject_id = #{record.parentSubjectId,jdbcType=INTEGER},
      start_date = #{record.startDate,jdbcType=DATE},
      end_date = #{record.endDate,jdbcType=DATE},
      month = #{record.month,jdbcType=CHAR},
      search_num = #{record.searchNum,jdbcType=INTEGER},
      student_num = #{record.studentNum,jdbcType=INTEGER},
      search_avg = #{record.searchAvg,jdbcType=INTEGER},
      search_avg_ranking = #{record.searchAvgRanking,jdbcType=INTEGER},
      search_avg_last = #{record.searchAvgLast,jdbcType=INTEGER},
      search_avg_treed = #{record.searchAvgTreed,jdbcType=TINYINT},
      correct_num = #{record.correctNum,jdbcType=INTEGER},
      correct_pro = #{record.correctPro,jdbcType=DECIMAL},
      correct_pro_last = #{record.correctProLast,jdbcType=DECIMAL},
      correct_pro_treed = #{record.correctProTreed,jdbcType=TINYINT},
      correct_pro_ranking = #{record.correctProRanking,jdbcType=INTEGER},
      exampaper_avg_pro = #{record.exampaperAvgPro,jdbcType=DECIMAL},
      exampaper_score = #{record.exampaperScore,jdbcType=DECIMAL},
      exampaper_total_score = #{record.exampaperTotalScore,jdbcType=DECIMAL},
      exampaper_num = #{record.exampaperNum,jdbcType=INTEGER},
      exampaper_avg_pro_last = #{record.exampaperAvgProLast,jdbcType=DECIMAL},
      exampaper_avg_pro_ranking = #{record.exampaperAvgProRanking,jdbcType=INTEGER},
      exampaper_avg_pro_treed = #{record.exampaperAvgProTreed,jdbcType=TINYINT},
      practice_num = #{record.practiceNum,jdbcType=INTEGER},
      practice_finish_num = #{record.practiceFinishNum,jdbcType=INTEGER},
      practice_unfinished_num = #{record.practiceUnfinishedNum,jdbcType=INTEGER},
      practice_pro = #{record.practicePro,jdbcType=DECIMAL},
      practice_pro_last = #{record.practiceProLast,jdbcType=DECIMAL},
      practice_pro_treed = #{record.practiceProTreed,jdbcType=TINYINT},
      practice_pro_renking = #{record.practiceProRenking,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.isprint.jslx.lccfd.model.FdTeacherMonthReport" >
    update fd_teacher_month_report
    <set >
      <if test="schoolId != null" >
        school_id = #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null" >
        grade_id = #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="classesId != null" >
        classes_id = #{classesId,jdbcType=INTEGER},
      </if>
      <if test="yearId != null" >
        year_id = #{yearId,jdbcType=INTEGER},
      </if>
      <if test="subjectId != null" >
        subject_id = #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="parentSubjectId != null" >
        parent_subject_id = #{parentSubjectId,jdbcType=INTEGER},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="month != null" >
        month = #{month,jdbcType=CHAR},
      </if>
      <if test="searchNum != null" >
        search_num = #{searchNum,jdbcType=INTEGER},
      </if>
      <if test="studentNum != null" >
        student_num = #{studentNum,jdbcType=INTEGER},
      </if>
      <if test="searchAvg != null" >
        search_avg = #{searchAvg,jdbcType=INTEGER},
      </if>
      <if test="searchAvgRanking != null" >
        search_avg_ranking = #{searchAvgRanking,jdbcType=INTEGER},
      </if>
      <if test="searchAvgLast != null" >
        search_avg_last = #{searchAvgLast,jdbcType=INTEGER},
      </if>
      <if test="searchAvgTreed != null" >
        search_avg_treed = #{searchAvgTreed,jdbcType=TINYINT},
      </if>
      <if test="correctNum != null" >
        correct_num = #{correctNum,jdbcType=INTEGER},
      </if>
      <if test="correctPro != null" >
        correct_pro = #{correctPro,jdbcType=DECIMAL},
      </if>
      <if test="correctProLast != null" >
        correct_pro_last = #{correctProLast,jdbcType=DECIMAL},
      </if>
      <if test="correctProTreed != null" >
        correct_pro_treed = #{correctProTreed,jdbcType=TINYINT},
      </if>
      <if test="correctProRanking != null" >
        correct_pro_ranking = #{correctProRanking,jdbcType=INTEGER},
      </if>
      <if test="exampaperAvgPro != null" >
        exampaper_avg_pro = #{exampaperAvgPro,jdbcType=DECIMAL},
      </if>
      <if test="exampaperScore != null" >
        exampaper_score = #{exampaperScore,jdbcType=DECIMAL},
      </if>
      <if test="exampaperTotalScore != null" >
        exampaper_total_score = #{exampaperTotalScore,jdbcType=DECIMAL},
      </if>
      <if test="exampaperNum != null" >
        exampaper_num = #{exampaperNum,jdbcType=INTEGER},
      </if>
      <if test="exampaperAvgProLast != null" >
        exampaper_avg_pro_last = #{exampaperAvgProLast,jdbcType=DECIMAL},
      </if>
      <if test="exampaperAvgProRanking != null" >
        exampaper_avg_pro_ranking = #{exampaperAvgProRanking,jdbcType=INTEGER},
      </if>
      <if test="exampaperAvgProTreed != null" >
        exampaper_avg_pro_treed = #{exampaperAvgProTreed,jdbcType=TINYINT},
      </if>
      <if test="practiceNum != null" >
        practice_num = #{practiceNum,jdbcType=INTEGER},
      </if>
      <if test="practiceFinishNum != null" >
        practice_finish_num = #{practiceFinishNum,jdbcType=INTEGER},
      </if>
      <if test="practiceUnfinishedNum != null" >
        practice_unfinished_num = #{practiceUnfinishedNum,jdbcType=INTEGER},
      </if>
      <if test="practicePro != null" >
        practice_pro = #{practicePro,jdbcType=DECIMAL},
      </if>
      <if test="practiceProLast != null" >
        practice_pro_last = #{practiceProLast,jdbcType=DECIMAL},
      </if>
      <if test="practiceProTreed != null" >
        practice_pro_treed = #{practiceProTreed,jdbcType=TINYINT},
      </if>
      <if test="practiceProRenking != null" >
        practice_pro_renking = #{practiceProRenking,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.isprint.jslx.lccfd.model.FdTeacherMonthReport" >
    update fd_teacher_month_report
    set school_id = #{schoolId,jdbcType=INTEGER},
      grade_id = #{gradeId,jdbcType=INTEGER},
      classes_id = #{classesId,jdbcType=INTEGER},
      year_id = #{yearId,jdbcType=INTEGER},
      subject_id = #{subjectId,jdbcType=INTEGER},
      parent_subject_id = #{parentSubjectId,jdbcType=INTEGER},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      month = #{month,jdbcType=CHAR},
      search_num = #{searchNum,jdbcType=INTEGER},
      student_num = #{studentNum,jdbcType=INTEGER},
      search_avg = #{searchAvg,jdbcType=INTEGER},
      search_avg_ranking = #{searchAvgRanking,jdbcType=INTEGER},
      search_avg_last = #{searchAvgLast,jdbcType=INTEGER},
      search_avg_treed = #{searchAvgTreed,jdbcType=TINYINT},
      correct_num = #{correctNum,jdbcType=INTEGER},
      correct_pro = #{correctPro,jdbcType=DECIMAL},
      correct_pro_last = #{correctProLast,jdbcType=DECIMAL},
      correct_pro_treed = #{correctProTreed,jdbcType=TINYINT},
      correct_pro_ranking = #{correctProRanking,jdbcType=INTEGER},
      exampaper_avg_pro = #{exampaperAvgPro,jdbcType=DECIMAL},
      exampaper_score = #{exampaperScore,jdbcType=DECIMAL},
      exampaper_total_score = #{exampaperTotalScore,jdbcType=DECIMAL},
      exampaper_num = #{exampaperNum,jdbcType=INTEGER},
      exampaper_avg_pro_last = #{exampaperAvgProLast,jdbcType=DECIMAL},
      exampaper_avg_pro_ranking = #{exampaperAvgProRanking,jdbcType=INTEGER},
      exampaper_avg_pro_treed = #{exampaperAvgProTreed,jdbcType=TINYINT},
      practice_num = #{practiceNum,jdbcType=INTEGER},
      practice_finish_num = #{practiceFinishNum,jdbcType=INTEGER},
      practice_unfinished_num = #{practiceUnfinishedNum,jdbcType=INTEGER},
      practice_pro = #{practicePro,jdbcType=DECIMAL},
      practice_pro_last = #{practiceProLast,jdbcType=DECIMAL},
      practice_pro_treed = #{practiceProTreed,jdbcType=TINYINT},
      practice_pro_renking = #{practiceProRenking,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>