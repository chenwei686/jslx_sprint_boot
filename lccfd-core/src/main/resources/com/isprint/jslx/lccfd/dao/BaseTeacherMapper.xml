<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.isprint.jslx.lccfd.dao.BaseTeacherMapper" >
  <resultMap id="BaseResultMap" type="com.isprint.jslx.lccfd.model.BaseTeacher" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="CHAR" />
    <result column="password" property="password" jdbcType="CHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="head_pic" property="headPic" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="BIT" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="school_id" property="schoolId" jdbcType="INTEGER" />
    <result column="school_degree_ids" property="schoolDegreeIds" jdbcType="VARCHAR" />
    <result column="grade_id" property="gradeId" jdbcType="INTEGER" />
    <result column="classes_id" property="classesId" jdbcType="INTEGER" />
    <result column="subject_id" property="subjectId" jdbcType="INTEGER" />
    <result column="year" property="year" jdbcType="CHAR" />
    <result column="is_change" property="isChange" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      id, name, mobile, password, real_name, head_pic, sex, birthday, school_id, school_degree_ids, 
      grade_id, classes_id, subject_id, year, is_change, create_time
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.isprint.jslx.lccfd.model.BaseTeacherQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    id,name,mobile,password,real_name,head_pic,sex,birthday,school_id,school_degree_ids,grade_id,classes_id,subject_id,year,is_change,create_time
    from base_teacher
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from base_teacher
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.isprint.jslx.lccfd.model.BaseTeacherQuery" >
    delete from base_teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.isprint.jslx.lccfd.model.BaseTeacher" >
    insert into base_teacher (id, name, mobile, 
      password, real_name, head_pic, 
      sex, birthday, school_id, school_degree_ids, 
      grade_id, classes_id, subject_id, 
      year, is_change, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{mobile,jdbcType=CHAR}, 
      #{password,jdbcType=CHAR}, #{realName,jdbcType=VARCHAR}, #{headPic,jdbcType=VARCHAR}, 
      #{sex,jdbcType=BIT}, #{birthday,jdbcType=DATE}, #{schoolId,jdbcType=INTEGER}, #{schoolDegreeIds,jdbcType=VARCHAR}, 
      #{gradeId,jdbcType=INTEGER}, #{classesId,jdbcType=INTEGER}, #{subjectId,jdbcType=INTEGER}, 
      #{year,jdbcType=CHAR}, #{isChange,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.isprint.jslx.lccfd.model.BaseTeacher" >
    insert into base_teacher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="headPic != null" >
        head_pic,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="schoolId != null" >
        school_id,
      </if>
      <if test="schoolDegreeIds != null" >
        school_degree_ids,
      </if>
      <if test="gradeId != null" >
        grade_id,
      </if>
      <if test="classesId != null" >
        classes_id,
      </if>
      <if test="subjectId != null" >
        subject_id,
      </if>
      <if test="year != null" >
        year,
      </if>
      <if test="isChange != null" >
        is_change,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=CHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="headPic != null" >
        #{headPic,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=BIT},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="schoolId != null" >
        #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="schoolDegreeIds != null" >
        #{schoolDegreeIds,jdbcType=VARCHAR},
      </if>
      <if test="gradeId != null" >
        #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="classesId != null" >
        #{classesId,jdbcType=INTEGER},
      </if>
      <if test="subjectId != null" >
        #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="year != null" >
        #{year,jdbcType=CHAR},
      </if>
      <if test="isChange != null" >
        #{isChange,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.isprint.jslx.lccfd.model.BaseTeacherQuery" resultType="java.lang.Integer" >
    select count(*) from base_teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update base_teacher
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=CHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=CHAR},
      </if>
      <if test="record.realName != null" >
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.headPic != null" >
        head_pic = #{record.headPic,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=BIT},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.schoolId != null" >
        school_id = #{record.schoolId,jdbcType=INTEGER},
      </if>
      <if test="record.schoolDegreeIds != null" >
        school_degree_ids = #{record.schoolDegreeIds,jdbcType=VARCHAR},
      </if>
      <if test="record.gradeId != null" >
        grade_id = #{record.gradeId,jdbcType=INTEGER},
      </if>
      <if test="record.classesId != null" >
        classes_id = #{record.classesId,jdbcType=INTEGER},
      </if>
      <if test="record.subjectId != null" >
        subject_id = #{record.subjectId,jdbcType=INTEGER},
      </if>
      <if test="record.year != null" >
        year = #{record.year,jdbcType=CHAR},
      </if>
      <if test="record.isChange != null" >
        is_change = #{record.isChange,jdbcType=BIT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update base_teacher
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=CHAR},
      password = #{record.password,jdbcType=CHAR},
      real_name = #{record.realName,jdbcType=VARCHAR},
      head_pic = #{record.headPic,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=BIT},
      birthday = #{record.birthday,jdbcType=DATE},
      school_id = #{record.schoolId,jdbcType=INTEGER},
      school_degree_ids = #{record.schoolDegreeIds,jdbcType=VARCHAR},
      grade_id = #{record.gradeId,jdbcType=INTEGER},
      classes_id = #{record.classesId,jdbcType=INTEGER},
      subject_id = #{record.subjectId,jdbcType=INTEGER},
      year = #{record.year,jdbcType=CHAR},
      is_change = #{record.isChange,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.isprint.jslx.lccfd.model.BaseTeacher" >
    update base_teacher
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="headPic != null" >
        head_pic = #{headPic,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="schoolId != null" >
        school_id = #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="schoolDegreeIds != null" >
        school_degree_ids = #{schoolDegreeIds,jdbcType=VARCHAR},
      </if>
      <if test="gradeId != null" >
        grade_id = #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="classesId != null" >
        classes_id = #{classesId,jdbcType=INTEGER},
      </if>
      <if test="subjectId != null" >
        subject_id = #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="year != null" >
        year = #{year,jdbcType=CHAR},
      </if>
      <if test="isChange != null" >
        is_change = #{isChange,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.isprint.jslx.lccfd.model.BaseTeacher" >
    update base_teacher
    set name = #{name,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=CHAR},
      password = #{password,jdbcType=CHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      head_pic = #{headPic,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT},
      birthday = #{birthday,jdbcType=DATE},
      school_id = #{schoolId,jdbcType=INTEGER},
      school_degree_ids = #{schoolDegreeIds,jdbcType=VARCHAR},
      grade_id = #{gradeId,jdbcType=INTEGER},
      classes_id = #{classesId,jdbcType=INTEGER},
      subject_id = #{subjectId,jdbcType=INTEGER},
      year = #{year,jdbcType=CHAR},
      is_change = #{isChange,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>