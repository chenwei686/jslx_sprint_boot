<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.isprint.jslx.lccfd.dao.BaseTimuTypeSortMapper" >
  <resultMap id="BaseResultMap" type="com.isprint.jslx.lccfd.model.BaseTimuTypeSort" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="timu_type_id" property="timuTypeId" jdbcType="INTEGER" />
    <result column="subject_id" property="subjectId" jdbcType="CHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="parent_subject_id" property="parentSubjectId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      id, timu_type_id, subject_id, sort, parent_subject_id
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.isprint.jslx.lccfd.model.BaseTimuTypeSortQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_timu_type_sort
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    id,timu_type_id,subject_id,sort,parent_subject_id
    from base_timu_type_sort
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from base_timu_type_sort
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.isprint.jslx.lccfd.model.BaseTimuTypeSortQuery" >
    delete from base_timu_type_sort
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.isprint.jslx.lccfd.model.BaseTimuTypeSort" >
    insert into base_timu_type_sort (id, timu_type_id, subject_id, 
      sort, parent_subject_id)
    values (#{id,jdbcType=INTEGER}, #{timuTypeId,jdbcType=INTEGER}, #{subjectId,jdbcType=CHAR}, 
      #{sort,jdbcType=INTEGER}, #{parentSubjectId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.isprint.jslx.lccfd.model.BaseTimuTypeSort" >
    insert into base_timu_type_sort
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="timuTypeId != null" >
        timu_type_id,
      </if>
      <if test="subjectId != null" >
        subject_id,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="parentSubjectId != null" >
        parent_subject_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="timuTypeId != null" >
        #{timuTypeId,jdbcType=INTEGER},
      </if>
      <if test="subjectId != null" >
        #{subjectId,jdbcType=CHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="parentSubjectId != null" >
        #{parentSubjectId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.isprint.jslx.lccfd.model.BaseTimuTypeSortQuery" resultType="java.lang.Integer" >
    select count(*) from base_timu_type_sort
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update base_timu_type_sort
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.timuTypeId != null" >
        timu_type_id = #{record.timuTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.subjectId != null" >
        subject_id = #{record.subjectId,jdbcType=CHAR},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.parentSubjectId != null" >
        parent_subject_id = #{record.parentSubjectId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update base_timu_type_sort
    set id = #{record.id,jdbcType=INTEGER},
      timu_type_id = #{record.timuTypeId,jdbcType=INTEGER},
      subject_id = #{record.subjectId,jdbcType=CHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      parent_subject_id = #{record.parentSubjectId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.isprint.jslx.lccfd.model.BaseTimuTypeSort" >
    update base_timu_type_sort
    <set >
      <if test="timuTypeId != null" >
        timu_type_id = #{timuTypeId,jdbcType=INTEGER},
      </if>
      <if test="subjectId != null" >
        subject_id = #{subjectId,jdbcType=CHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="parentSubjectId != null" >
        parent_subject_id = #{parentSubjectId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.isprint.jslx.lccfd.model.BaseTimuTypeSort" >
    update base_timu_type_sort
    set timu_type_id = #{timuTypeId,jdbcType=INTEGER},
      subject_id = #{subjectId,jdbcType=CHAR},
      sort = #{sort,jdbcType=INTEGER},
      parent_subject_id = #{parentSubjectId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>